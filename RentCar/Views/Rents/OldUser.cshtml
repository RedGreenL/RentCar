@model RentCar.Models.Rents

@{
    ViewBag.Title = "OldUser";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid col-md-offset-4">
    @using (Html.BeginForm("OldUser", "Rents", new { carId = ViewBag.CurentCar.Car_ID }, FormMethod.Post))
    {
        <div class="form-group row">
            <div class="col-md-6">
                @Html.TextBox("searchPhone", null, new { @class = "form-control ", placeholder = "Phone number" })
            </div>            
            <div class="col-md-6">
                <input type="submit" value="Find" class="btn btn-success btn-md" />
            </div>
        </div>
    }
</div>


@using (Html.BeginForm("OrderOldClient", "Rents"))
{
    @Html.AntiForgeryToken()
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-2">
            </div>

            <div class="col-sm-5">
                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @if (ViewBag.Client != null)
                    {
                        <h2> HI @ViewBag.Client.Surname !!</h2>
                        <h2>
                           Email: @ViewBag.Client.Email
                        </h2>
                        <h2>
                           Phone: @ViewBag.Client.Phone
                        </h2>
                    }
                    else
                    {
                        @Html.Raw("We have not been able to find users, please try again")
                    }

                </div>
            </div>

            <div class="col-sm-5">

                <div class="form-horizontal">
                    <hr />


                    <div class="form-group">
                        @Html.DropDownListFor(m => m.Car_ID,
                            new SelectList(ViewBag.Car, "Car_ID", "Brand", ViewBag.CurentCar.Car_ID),
                            "Change Car",
                            new {@class = "form-control", @placeholder = "Category"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.StartData, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>

                    <div class="form-group">
                        @Html.EditorFor(model => model.StartData, new { htmlAttributes = new { @class = "form-control", type = "date", id = "startData" } })
                        @Html.ValidationMessageFor(model => model.StartData, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EndData, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>

                    <div class="form-group">
                        @Html.EditorFor(model => model.EndData, new { htmlAttributes = new { @class = "form-control", type = "date", id = "endData", onchange = "CalculatePrice()" } })
                        @Html.ValidationMessageFor(model => model.EndData, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.CheckBoxFor(m => m.Driver, new { @style = "height: 17px" })
                        <label>Include driver</label>
                    </div>
                    <div class="PriceCarMain">
                        <h3 id="priceCalc">Total price: @ViewBag.CurentCar.Price &euro;</h3>
                    </div>
                    @if (ViewBag.Client != null)
                    {
                        @Html.HiddenFor(model => model.Client_ID, new {Value = ViewBag.Client.Client_ID});

                    }
                </div>
            </div>
        </div>
        <div class="form-group">
            <input type="submit" value="Send Order" class="btn btn-success btn-lg btn-block  center-block" />
        </div>
    </div>

}


<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    function CalculatePrice() {
        var startData = $("#startData").val();
        var endData = $("#endData").val();
        var curentPrice = @(ViewBag.CurentCar.Price);
        debugger
        $.ajax({
            url: '/Rents/TotalPriceRent',
            type: 'POST',
            data:
            {
                startDate: startData,
                endDate: endData,
                price: curentPrice
            }
            ,
            success: function (result) {
                console.log("MDa");
                $("#priceCalc").html("Total price: " + result+" &euro; ");
            },
            error: function (err) {
                alert("error " + err.toString() + err.message);
            }
        });
    }

</script>